@model NewsViewModel

<div class="container-fluid set-max-size posts">
    <form method="post" asp-action="Create" asp-controller="News">
        @Html.HiddenFor(model => model.Id)
        <div class="card news-card">
            <h4 class="card-header">Новости</h4>
            <div class="card-body">
                @Html.LabelFor(m => m.Title, "Заголовок новости")
                @Html.TextBoxFor(m => m.Title, new { @required = "required" })
            </div>
            <div class="card-body">
                @Html.LabelFor(m => m.Content, "Контент")
                @Html.TextAreaFor(m => m.Content, new { @class = "ckeditor content-textarea", @required = "required" })
            </div>
            <div class="card-body">
                @Html.LabelFor(m => m.Published, "Опубликовать?")
                <div>
                    @Html.LabelFor(m => m.Published, "Да")
                    @Html.RadioButtonFor(m => m.Published, true)
                </div>
                <div>
                    @Html.LabelFor(m => m.Published, "Нет")
                    @Html.RadioButtonFor(m => m.Published, false)
                </div>
            </div>
            <div class="card-body">
                @Html.LabelFor(m => m.Deleted, "Удалить?")
                <div>
                    @Html.LabelFor(m => m.Deleted, "Да")
                    @Html.RadioButtonFor(m => m.Deleted, true)
                </div>
                <div>
                    @Html.LabelFor(m => m.Deleted, "Нет")
                    @Html.RadioButtonFor(m => m.Deleted, false)
                </div>
            </div>
            @*<div class="card-body">
                @Html.LabelFor(model => model.Authors, "Автор")
                @Html.DropDownListFor(model => model.SelectedAuthor, new SelectList(Model.Authors, "Список авторов", "Text"), "- Выберите автора -", new {@required = "required"})
            </div>*@
            <div class="card-body">
                @Html.LabelFor(m => m.PostCategories, "Категории")
                @{
                    if (Model.PostCategories != null && Model.PostCategories.Any())
                    {
                        foreach (var category in Model.PostCategories)
                        {
                            <div>
                                @Html.LabelFor(m => category, category.Category.Name)
                                @Html.CheckBoxFor(m => category.IsChecked)
                            </div>
                        }
                    }
                }
            </div>
            <button type="submit" class="btn btn-outline-success">Create</button>
        </div>
    </form>
</div>

@section ScriptsSection{
    <script src="~/js/pager.js"></script>
    <script src="~/js/manager/ckeditor/ckeditor.js"></script>
    <script>
        $(document).ready(() => {
            var editor = CKEDITOR.instances.Content;
            var textArea = $('.content-textarea');
            editor.on( 'change', function( evt ) {
                textArea.val(evt.editor.getData());
            });
        });
    </script>
}